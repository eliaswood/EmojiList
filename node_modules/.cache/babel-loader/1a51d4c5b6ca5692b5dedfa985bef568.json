{"ast":null,"code":"import _slicedToArray from \"/Users/eliaswood/Desktop/Workspace/emoji/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/eliaswood/Desktop/Workspace/emoji/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport EmojiList from './components/EmojiList';\n\nconst emojis = require('node-emoji');\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        responseEmoji = _useState2[0],\n        setResponseEmoji = _useState2[1];\n\n  useEffect(term => {\n    (async term => {\n      const response = await emojis.search('h');\n      setResponseEmoji(response.data); // return response.map(emoji => <div key={emoji.key}>{emoji.emoji} {emoji.key}</div>)\n    })(term);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Emoji Search\"), React.createElement(SearchBar, {\n    onFormSubmit: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(EmojiList, {\n    emojis: responseEmoji,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), responseEmoji);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/eliaswood/Desktop/Workspace/emoji/src/App.js"],"names":["React","useState","useEffect","SearchBar","EmojiList","emojis","require","App","responseEmoji","setResponseEmoji","term","response","search","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAE0BN,QAAQ,CAAC,EAAD,CAFlC;AAAA;AAAA,QAETO,aAFS;AAAA,QAEMC,gBAFN;;AAIhBP,EAAAA,SAAS,CACNQ,IAAD,IAAU;AACR,KAAC,MAAMA,IAAN,IAAc;AACZ,YAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,MAAP,CAAc,GAAd,CAAvB;AACAH,MAAAA,gBAAgB,CAACE,QAAQ,CAACE,IAAV,CAAhB,CAFY,CAGd;AACF,KAJC,EAICH,IAJD;AAKH,GAPQ,EAQT,EARS,CAAT;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEF,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGA,aAJH,CADF;AASD,CAvBD;;AAwBA,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SearchBar from './components/SearchBar';\nimport EmojiList from './components/EmojiList';\n\nconst emojis = require('node-emoji')\n\nconst App = () => {\n\n  const [responseEmoji, setResponseEmoji] = useState('')\n\n  useEffect(\n    (term) => {\n      (async term => {\n         const response = await emojis.search('h');\n         setResponseEmoji(response.data);\n       // return response.map(emoji => <div key={emoji.key}>{emoji.emoji} {emoji.key}</div>)\n    })(term)\n  },\n  []);\n\n  return (\n    <div>\n      <h1>Emoji Search</h1>\n      <SearchBar onFormSubmit={null} />\n      <EmojiList emojis={responseEmoji}/>\n      {responseEmoji}\n\n    </div>\n  )\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}